name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, synchronize, reopened ]

permissions:
  contents: read

jobs:
  build:
    name: Build and scan
    runs-on: ubuntu-24.04
    if: ${{ !contains(github.event.head_commit.message, 'Automatically generated by python-semantic-release') }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python 3.12
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          sudo apt update -yq && sudo apt install -yq ffmpeg
      - name: Lint
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --ignore=E501,W201,W503 --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test
        run: |
          pytest --cov=app --cov-report=xml
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          TAVILY_API_KEY: ${{ secrets.TAVILY_API_KEY }}
          XAI_API_KEY: ${{ secrets.XAI_API_KEY }}
          LANGWATCH_API_KEY: ${{ secrets.LANGWATCH_API_KEY }}
          LANGWATCH_ENDPOINT: ${{ secrets.LANGWATCH_ENDPOINT }}
          BUILD_WORKFLOW: "True"
      - name: SonarQube
        uses: SonarSource/sonarqube-scan-action@v6.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
