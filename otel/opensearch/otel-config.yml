receivers:
  otlp:
    protocols:
      http:
        endpoint: 0.0.0.0:4318
        cors:
          allowed_origins:
            - "http://*"
            - "https://*"

exporters:
  debug:
  opensearch/traces:
    http:
      endpoint: http://opensearch:9200
    timeout:
    retry_on_failure:
      enabled: true
      initial_interval: 100000000
      randomization_factor: 0.5
    dataset: traces
  opensearch/logs:
    http:
      endpoint: http://opensearch:9200
    timeout:
    retry_on_failure:
      enabled: true
      initial_interval: 100000000
      randomization_factor: 0.5
    dataset: logs
  otlp/traces:
    endpoint: "data-prepper:21890"
    tls:
      insecure: true
      insecure_skip_verify: true
  otlp/metrics:
    endpoint: "data-prepper:21891"
    tls:
      insecure: true
      insecure_skip_verify: true
  otlp/logs:
    endpoint: "data-prepper:21892"
    tls:
      insecure: true
      insecure_skip_verify: true

processors:
  batch:
  filter/ottl:
    error_mode: ignore
    metrics:
      metric:
        - 'name == "rpc.server.duration"'
  transform:
    metric_statements:
      - context: metric
        statements:
          - set(description, "") where name == "queueSize"
          - set(description, "") where name == "http.client.duration"

connectors:
  spanmetrics:

service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [debug, spanmetrics, otlp/traces, opensearch/traces]
    metrics:
      receivers: [otlp, spanmetrics]
      processors: [filter/ottl, transform, batch]
      exporters: [otlp/metrics, debug]
    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlp/logs, opensearch/logs, debug]
